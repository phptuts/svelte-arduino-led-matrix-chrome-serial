{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Led from \"./Led.svelte\";\n  import _ from \"lodash\";\n\n  let leds = _.range(0, 8).map(() => _.range(0, 8).map(() => false));\n  let writer;\n  let showError;\n  let errorMessage;\n  const enc = new TextEncoder(); // always utf-8\n\n  async function connectUSB() {\n    showError = false;\n    try {\n      const port = await navigator.serial.requestPort();\n\n      await port.open({\n        baudrate: 115200\n      });\n      writer = port.writable.getWriter();\n    } catch (e) {\n      showError = true;\n      console.error(e);\n      errorMessage = e.message;\n    }\n  }\n\n  function clearScreen() {\n    leds = _.range(0, 8).map(() => _.range(0, 8).map(() => false));\n  }\n\n  function onChangeLed(e) {\n    const { row, col, isOn } = e.detail;\n    leds[row][col] = isOn;\n    leds = [...leds];\n  }\n  let ledString = \"\";\n  $: {\n    ledString =\n      _.clone(leds)\n        .reverse()\n        .reduce((prev, next, index) => {\n          const startingString = index === 0 ? \"\" : \":\";\n          return (\n            prev +\n            startingString +\n            next.map(isOn => (isOn ? \"1\" : \"0\")).join(\":\")\n          );\n        }, \"\") + \"|\";\n    if (writer) {\n      writer.write(enc.encode(ledString));\n    }\n  }\n</script>\n\n<style>\n  .header {\n    text-align: center;\n  }\n  .error {\n    background: red;\n    color: white;\n    width: 400px;\n    text-align: center;\n    margin: 20px auto;\n  }\n  section {\n    display: flex;\n    height: 45px;\n    width: 440px;\n    margin: 10px auto;\n    transform: rotate(\"90deg\");\n  }\n  div.message {\n    border: black solid 1px;\n    font-size: 0.9em;\n    text-align: center;\n    margin-top: 40px;\n  }\n  :global(div.led) {\n    flex: 1;\n    border: solid black 1px;\n    height: 45px;\n    border-radius: 22.5px;\n    margin: 5px;\n  }\n</style>\n\n<main class=\"container\">\n  {#if showError}\n    <div class=\"row error\">{errorMessage}</div>\n  {/if}\n  <div class=\"row header\">\n    <h1>Led Matrix Draw</h1>\n    <button on:click={connectUSB} class=\"button-primary\">Connect to USB</button>\n    <button on:click={clearScreen} class=\"button-primary\">Clear Screen</button>\n\n  </div>\n\n  {#each leds as rowLeds, row}\n    <section>\n      {#each rowLeds as isOn, col}\n        <Led {row} {col} {isOn} on:changeLed={onChangeLed} />\n      {/each}\n    </section>\n  {/each}\n  <div class=\"row message\">\n    <h3>Message to USB</h3>\n    <p>{ledString}</p>\n  </div>\n</main>\n\n<iframe\n  width=\"560\"\n  height=\"315\"\n  src=\"https://www.youtube.com/embed/FifWMKa8ACA\"\n  frameborder=\"0\"\n  allowfullscreen />\n"
  ],
  "names": [],
  "mappings": "AAuDE,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,GAAG,CACf,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,OAAO,OAAO,CAAC,AAC5B,CAAC,AACD,GAAG,QAAQ,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CACvB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AACO,OAAO,AAAE,CAAC,AAChB,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CACvB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,GAAG,AACb,CAAC"
}